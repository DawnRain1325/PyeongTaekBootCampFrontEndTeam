for of 반복문

for in 반복문은 반복 변수에 인덱스가 들어갑니다.

반복문 내부에 요소를 사용하려면 fruits[i]와 같은 형태로 사용하며 안정성을 위해 몇가지 코드를 추가합니다.

이럴때 쓰는 코드가 for of 반복문이며 요소의 값을 반복할 때 안정적으로 사용 가능.

for of 반복문의 기본형태

for ( const 반복 변수 of 배열 또는 객체) {
문장
}

for in 반복문과 다르게 반복 변수에 요소의값이 들어감.

for 반복문의 기본형태

for (let i = 0; i<반복 횟수; i++){
문장
}

다른 반복문과 다르게 반복 변수를 let 키워드로 선언


while 반복문
if 조건문과 형태가 매우 비슷한 반복문

while ( 불 표현식) {
문장
}

while 반복문의 경우 조건이 변하지않으면 ㅂ무한히 반복 실행 하므로 조건을 거짓으로 만들수 있는 내용이 문장에 포함되어야함.
반복문이 무한 반복되는것을 infinite Loof

자바스크립트에서는 무한반복 잘못사용하면 페이지 전체가 먹통이 되기 때문에 Break 사용하여

반드시 무한반복을 벗어나는 코드를 추가해야함.


break 키워드

break 키워드는 switch 조건문에서 언급 했듯이 조건문이나 반복문을 벗어날때 사용

while (true) {
}break

Continue 반복문 안의 반복을 멈추고 처음으로 돌아가 다시 반복문 작업.


for in 반복문은 배열의 인덱스를 기반으로 반복할 때 사용합니다.
for of 반복문은 배열의 값을 기반으로 반복할 떄 사용합니다.
for 반복문은 횟수를 기반으로 반복할 때 사용합니다.
while 반복문은 조건을 기반으로 반복할 때 사용합니다.
break 키워드 switch 키워드 조건문이나 반복문 벗어날때 사용합니다.
continue 키워드는 반복문 안의 반복 작업을 멈추고 반복문의 처음으로 돌아가 다음 반복 작업을 진행합니다.


function

함수

함수호출 - 함수를 사용하는 것

괄호내부에 여러가지 자료를 넣으면 매개변수

함수를 호출해서 최종적으로 나오는 결과를 리턴

자료data  -------매개변수--------> f(x) 함수

입력 ( input)

     ㅣ
     ▽

함수 function : f 수행햐할 작업
     ㅣ
     ▽

출력 (output ) = y


함수의 기본형태는 function () {}

함수를 코드의 집합이라고 말하는 이유는 중괄호 {...} 내부에 코드를 넣기 때문

함수는 코드의 집합.

함수를 사용시 좋은점

- 반복되는 코드를 한번ㅁ나 정의해놓고 필요할때 마다 호추랳서 반복작업을 피할수있습니다.

-긴 프로그램을 기능별로 나눠 여러 함수로 나누어 작성하면 모듈화로 전체 코드의 가독성이 좋아요

- 기능별 ( 함수별 )로 수정이 가능하므로 유지보수가 쉽습니다.

f () {} 형태로 하고

함수를 출력했을때 별다른 이름이 붙어 있지 않은건 annonymous function.

이라고 표현.


선언적 함수 이름이 있는 함수
function 함수 () {
}

let 함수 =function () {};

매개변수 와 리턴값

함수를 호출시에 괄호안에 적는것

prompt() 함수를 사용할때 매개변수로 message 를 넣어야 합니다.

그러면 prompt() 함수의 최종결과는 문자열로 나옵니다. 함수의 최종결과를 리턴값이라고 합니다.

prompt() 함수의 매개변수와 리턴값

function 함수 (매개변수 , 매개변수,매개변수) {
문장
문장 
return 리턴값
}

함수에 넣는 input 이 매개변수

output 리턴



    X=3 input(매개변수)
      l 
     ▽
     X^2  (function)
      l 
     ▽
f(x) =9 

output = 리턴값

컴퓨터가 랜덤으로 숫자를 생성한다 111~999

사용자로부터 값을얻는다 111~999

X [i, j, k] 

Y [n, m, o] 

i === n

j === m 

k === o 

3스트라이크




 
  
